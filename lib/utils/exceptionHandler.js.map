{"version":3,"sources":["../../src/utils/exceptionHandler.js"],"names":["ctx","next","err","Exception","logger","error","toObject","body","status","statusCode","message"],"mappings":";;;;;;AAAA;;AACA;;;;;;kBAEe,OAAOA,GAAP,EAAYC,IAAZ,KAAqB;AAClC,MAAI;AACF,WAAO,MAAMA,MAAb;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,QAAIA,eAAeC,oBAAnB,EAA8B;AAC5BC,wBAAOC,KAAP,CAAaH,IAAII,QAAJ,EAAb;AACAN,UAAIO,IAAJ,GAAWL,IAAII,QAAJ,EAAX;AACAN,UAAIQ,MAAJ,GAAaN,IAAIO,UAAjB;AACD,KAJD,MAIO;AACLL,wBAAOC,KAAP,CAAaH,IAAIQ,OAAjB;AACAV,UAAIO,IAAJ,GAAW,EAAEG,SAAS,kBAAX,EAAX;AACAV,UAAIQ,MAAJ,GAAa,GAAb;AACD;AACF;AACF,C","file":"exceptionHandler.js","sourcesContent":["import { Exception } from './Exception.class'\nimport logger from '../config/winston.user'\n\nexport default async (ctx, next) => {\n  try {\n    return await next()\n  } catch (err) {\n    if (err instanceof Exception) {\n      logger.error(err.toObject())\n      ctx.body = err.toObject()\n      ctx.status = err.statusCode\n    } else {\n      logger.error(err.message)\n      ctx.body = { message: 'Unexpected error' }\n      ctx.status = 500\n    }\n  }\n}\n"]}